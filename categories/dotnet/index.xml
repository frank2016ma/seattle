<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>dotnet on Frank in seattle</title>
        <link>https://frank2016ma.github.io/seattle/categories/dotnet/</link>
        <description>Recent content in dotnet on Frank in seattle</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 29 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://frank2016ma.github.io/seattle/categories/dotnet/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Csharp 调用外部exe</title>
        <link>https://frank2016ma.github.io/seattle/posts/windows/dotnet/csharp-call-command-line/</link>
        <pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/windows/dotnet/csharp-call-command-line/</guid>
        <description>C# 中可以通过 Diagnostics.Process 类来实现调用外部的可执行文件
下面是一段调用 PowerPoint 演示幻灯片的脚本:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  using System.Diagnostics; namespace awake { class Program { static void Main(string[] args) { Process p = new Process(); // powershell 的命令行工具  p.StartInfo.FileName = &amp;#34;C:\\Program Files (x86)\\Microsoft Office\\Office16\\POWERPNT.EXE&amp;#34;; // /S 后面跟着命令的参数  p.StartInfo.Arguments = &amp;#34;/S \&amp;#34;E:\\mail\\keep awake.pptx\&amp;#34;&amp;#34;; p.StartInfo.CreateNoWindow = true; p.StartInfo.UseShellExecute = false; p.Start(); } } }   </description>
        </item>
        
    </channel>
</rss>
