<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>others on Frank in seattle</title>
        <link>https://frank2016ma.github.io/seattle/categories/others/</link>
        <description>Recent content in others on Frank in seattle</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 31 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://frank2016ma.github.io/seattle/categories/others/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>编程文档中的 Foo Bar</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/foo-bar/</link>
        <pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/foo-bar/</guid>
        <description>许多软件文档中, 代码示例的部分, 经常会使用 &amp;lsquo;foobar&amp;rsquo;或者 &amp;lsquo;foo&amp;rsquo;, &amp;lsquo;bar&amp;rsquo; 作为变量, 这两个单词具体是什么意思有点困惑, 词典给出的中文翻译都联系不上
太长不看版:
结合国情来理解, foo 和 bar 就是课文中的小明和小红, 罗翔刑法案例中的张三, 张宇高数课, 等价无穷小公式中的狗
以下是维基百科给出的详细解释:
Foobar - Wikipedia
 在编程中, 还有许多类似的约定俗成的占位符
比如 python 中的 单下划线_, 表示某个临时的无关紧要的变量
xargs命令参数中的 -I {}
find命令 -exec 参数后 的 {}</description>
        </item>
        <item>
        <title>TOML 配置文件</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/toml/</link>
        <pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/toml/</guid>
        <description>规格  TOML 是大小写敏感的 TOML 文件必须是合法的 UTF-8 编码的 Unicode 文档 空白是指制表符(0x09)或空格(0x20) 换行是指 LF(0x0A)或 CRLF(0x0D 0x0A) 使用 # 符号作为注释  键值对 TOML 文档最基本的构成区块是键值对, 键名和键值周围的空白会被忽略
多次定义同一个key是非法的
1  key = &amp;#34;value&amp;#34;   点分隔符 1 2 3 4  name = &amp;#34;Orange&amp;#34; physical.color = &amp;#34;orange&amp;#34; physical.shape = &amp;#34;round&amp;#34; site.&amp;#34;google.com&amp;#34; = true # 引号内的点不会作为分隔符   等价于
1 2 3 4 5 6 7 8 9 10  { &amp;#34;name&amp;#34;: &amp;#34;Orange&amp;#34;, &amp;#34;physical&amp;#34;: { &amp;#34;color&amp;#34;: &amp;#34;orange&amp;#34;, &amp;#34;shape&amp;#34;: &amp;#34;round&amp;#34; }, &amp;#34;site&amp;#34;: { &amp;#34;google.</description>
        </item>
        <item>
        <title>Bilibili Video Test</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/bilibili-video-test/</link>
        <pubDate>Sat, 13 May 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/bilibili-video-test/</guid>
        <description>测试 hugo 主题 stack 中的 bilibili 视频 shortcode
</description>
        </item>
        <item>
        <title>MIME</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/mime/</link>
        <pubDate>Fri, 28 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/mime/</guid>
        <description>MIME 类型 MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的标准，用来表示文档、文件或字节流的性质和格式。
MIME 消息能包含文本、图像、音频、视频以及其他应用程序专用的数据。
浏览器通常使用 MIME 类型（而不是文件扩展名）来确定如何处理URL，因此 We b服务器在响应头中添加正确的 MIME 类型非常重要。如果配置不正确，浏览器可能会无法解析文件内容，网站将无法正常工作，并且下载的文件也会被错误处理。
语法 MIME 类型通用结构：
 type/subtype
 MIME 的组成结构非常简单，由类型与子类型两个字符串中间用 / 分隔而组成，不允许有空格。type 表示可以被分多个子类的独立类别，subtype 表示细分后的每个类型。
MIME类型对大小写不敏感，但是传统写法都是小写。
两种主要的 MIME 类型在默认类型中扮演了重要的角色：
 text/plain 表示文本文件的默认值。 application/octet-stream 表示所有其他情况的默认值。   摘自 MIME 类型 | 菜鸟教程</description>
        </item>
        <item>
        <title>Win11 Brightness</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/win11-brightness/</link>
        <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/win11-brightness/</guid>
        <description>Windows11 系统的笔记本电脑在使用电源时, 会出现偶尔屏幕变暗又恢复的情况
解决方法:
打开 设置 &amp;gt; 系统 &amp;gt; 屏幕, 点击亮度调节 右侧下拉选项, 取消勾选 通过优化显示的内容和亮度降低电池能耗</description>
        </item>
        <item>
        <title>Microsoft Excel 横向滚动</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/microsoft-excel-scroll/</link>
        <pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/microsoft-excel-scroll/</guid>
        <description>浏览器 WPS Office 及及大部分支持横向滚动的桌面端软件, 支持 Shift + 鼠标滚轮 实现横向滚动
Microsoft Office 的 Excel 横向滚动的方式是 Ctrl + Shift + 鼠标滚轮</description>
        </item>
        <item>
        <title>Todo</title>
        <link>https://frank2016ma.github.io/seattle/posts/others/todo/</link>
        <pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/others/todo/</guid>
        <description>函数式编程入门教程 - 阮一峰的网络日志
JavaScript 教程 - 网道
ES6 教程 - 网道
XHR，ajax，axios，fetch之间的区别 - 掘金
JavaScript 教程 - SegmentFault 思否</description>
        </item>
        
    </channel>
</rss>
