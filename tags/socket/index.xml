<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>socket on Frank in seattle</title>
        <link>https://frank2016ma.github.io/seattle/tags/socket/</link>
        <description>Recent content in socket on Frank in seattle</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 23 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://frank2016ma.github.io/seattle/tags/socket/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>python 实现简易多人聊天室</title>
        <link>https://frank2016ma.github.io/seattle/posts/python/chat-room/</link>
        <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
        
        <guid>https://frank2016ma.github.io/seattle/posts/python/chat-room/</guid>
        <description>原理 实现一个多人聊天室需要两个部分, client 端 和server 端
client 端只和server端进行通信, 不同的client之间是不会直接通信的
实现需要两个核心的库, socket 和 threading
socket 用来实现网络中的多个节点并进行通信
threading 模块用于支持多线程(python有全局解释锁, 所以是伪多线程)
Server 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94  class ChatServer: def __init__(self, host, port) -&amp;gt; None: self.</description>
        </item>
        
    </channel>
</rss>
